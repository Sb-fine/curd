# Maven

# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  java_aws
stages:
# - stage: Test
#   displayName: Snyk Test
#   jobs:
#     - job: Test
#       steps:
#         - task: SnykSecurityScan@1
#           inputs:
#             serviceConnectionEndpoint: 'snyk-test'
#             testType: 'app'
#             monitorWhen: 'always'
#            failOnIssues: false     

- stage: Build 
  displayName: Build Maven
  variables:
    rsource: frontend/react-frontend/build

  jobs:
# Maven Build (Backend)
  - job: MavenPackageAndPublishArtifacts
    steps:
    - script: |
        echo "Maven Build"
    - task: Maven@3
      inputs:
        mavenPomFile: 'backend/pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        # jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package'         

    - task: SnykSecurityScan@1
      inputs:
        serviceConnectionEndpoint: 'snyk-test'
        testType: 'app'
        targetFile: '$(System.DefaultWorkingDirectory)'
        monitorWhen: 'never'
        failOnIssues: false
    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.war'
        TargetFolder: $(Build.ArtifactStagingDirectory)
    
    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop
      
# React Build (Frontend)
  - job: FrontendBuild
    steps:
    - script: |
        cd frontend/react-frontend
        npm install
        npm run build
    
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(rsource)'
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'rdrop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployLinuxWebApp
    displayName: Deploy Linux Web App
    environment: $(environmentName)
    pool:
      java_aws
  - job:
    steps:
    # - task: CopyFiles@2
    #   displayName: 'Copy Files to artifact staging directory'
    #   inputs:
    #     SourceFolder: '$(Build.ArtifactStagingDirectory)'
    #     Contents: '**/target/*.war'
    #     TargetFolder: /opt/tomcat/webapps
    - script: |
        echo $(Build.ArtifactStagingDirectory)
        echo $(System.ArtifactsDirectory)
        cp /home/fs-lp-28/Desktop/azure-agent/myagent/_work/1/drop/backend/target/*.war /opt/tomcat/webapps

