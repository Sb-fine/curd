# Maven

# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  OP

stages:
# - stage: Test
#   displayName: Snyk Test
#   jobs:
#     - job: Test
#       steps:
#         - task: SnykSecurityScan@1
#           inputs:
#             serviceConnectionEndpoint: 'snyk-test'
#             testType: 'app'
#             monitorWhen: 'always'
#            failOnIssues: false     

- stage: BuildMaven
  displayName: Build Maven


  jobs:
# Maven Build (Backend)
  - job: MavenPackageAndPublishArtifacts
    # steps:
    # - script: |
    #     echo "Maven Build"
    # - task: SonarQubePrepare@5
    #   inputs:
    #     SonarQube: 'sonarqube'
    #     scannerMode: 'Other'
    #     extraProperties: |
    #       # Additional properties that will be passed to the scanner,
    #       # Put one key=value per line, example:
    #       # sonar.exclusions=**/*.bin
    #       sonar.projectKey=CRUD_Applications_CRUD_Applications_AYls8Xmuj6a284NO-BJp
    #       sonar.projectName=CRUD_Applications
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'backend/pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        # sonarQubeRunAnalysis: true
        # sqMavenPluginVersionChoice: 'latest'
    # - task: SonarQubePublish@5
    #   inputs:
    #     pollingTimeoutSec: '300'
    

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.war'
        TargetFolder: $(Build.ArtifactStagingDirectory)
    
    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop
      
# - stage: ReactBuild
#   jobs:
#   - job: React
#     steps:
#     - template: azure-pipeline-2.yml

# - stage: Deploy
#   jobs:
#   - job: ReactDeploy
#     steps:
#     - script: |
#         cp $(Build.ArtifactStagingDirectory)/rdrop/*.zip /opt/tomcat/webapps
      
# React Build (Frontend)
- stage:
  variables:
    rsource: frontend/react-frontend/build
  jobs:
  - job: FrontendBuild
    steps:
    - script: |
        cd frontend/react-frontend
        npm install
        npm run build
    
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(rsource)'
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'rdrop'
        publishLocation: 'Container'

# - stage: Deploy
#   displayName: Deploy stage
#   dependsOn: Build
#   condition: succeeded()
#   jobs:
#   - deployment: DeployLinuxWebApp
#     displayName: Deploy Linux Web App
#     environment: $(environmentName)
#     pool:
#       java_aws
#   - job:
#     steps:
#     # - task: CopyFiles@2
#     #   displayName: 'Copy Files to artifact staging directory'
#     #   inputs:
#     #     SourceFolder: '$(Build.ArtifactStagingDirectory)'
#     #     Contents: '**/target/*.war'
#     #     TargetFolder: /opt/tomcat/webapps
#     - script: |
#         echo $(Build.ArtifactStagingDirectory)
#         echo $(System.ArtifactsDirectory)
#         cp /home/fs-lp-28/Desktop/azure-agent/myagent/_work/1/drop/backend/target/*.war /opt/tomcat/webapps

